name: Deploy via SSH

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ssh-deploy
  cancel-in-progress: true

jobs:
  build:
    name: Install and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          lfs: true
          
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: website
          path: ./build
          retention-days: 1

  deploy-ssh:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy via SSH
    environment: production

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: website
          path: ./website

      - name: Deploy to Server via SSH
        uses: easingthemes/ssh-deploy@v5.1.0  # 明确指定版本
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.SSH_HOST }}    # 全大写命名
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}    # 全大写命名
          REMOTE_PORT: ${{ secrets.SSH_PORT }}    # 全大写命名（可选，默认 22）
          SOURCE: ./website                              # 本地构建目录（可选，默认空）
          TARGET: /var/www/       # 服务器目标路径（可选，默认空）
          ARGS: "-rlgoDzvc -i"                       # rsync 参数（默认值）
          SSH_CMD_ARGS: "-o StrictHostKeyChecking=no" # SSH 参数（默认值）
          SCRIPT_BEFORE: |
            echo "Before Deployment:"
            whoami
            ls -al /var/www/
            rm -r /var/www/website
          SCRIPT_AFTER: |
            echo "After Deployment:"
            whoami
            ls -al /var/www/
            echo "RSYNC Output: $RSYNC_STDOUT"
