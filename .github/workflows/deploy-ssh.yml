name: Deploy via SSH

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ssh-deploy
  cancel-in-progress: true

jobs:
  build:
    name: Install and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: dist
          path: ./build
          retention-days: 1

  deploy-ssh:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy via SSH
    environment: production

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: dist
          path: ./dist

      - name: Deploy to Server via SSH
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
          REMOTE_PORT: ${{ secrets.SSH_PORT }}
          SOURCE: ./website
          TARGET: /var/www/website
          ARGS: "-rlgoDzvc -i"
          SSH_CMD_ARGS: "-o StrictHostKeyChecking=no"
          SCRIPT_BEFORE: |
            echo "Before Deployment:"
            whoami
            ls -al /var/www/
          SCRIPT_AFTER: |
            echo "After Deployment:"
            whoami
            ls -al /var/www/website
            echo "RSYNC Output: $RSYNC_STDOUT"
